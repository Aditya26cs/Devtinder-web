import { createSlice } from "@reduxjs/toolkit";

const userSlice = createSlice({
  name: "user",
  initialState: null,
  reducers: {
    addUser: (state, action) => {
      return action.payload;
    },
    removeUser: (state , action) => {
      return null;
    },
  },
});

export const { addUser , removeUser} = userSlice.actions;
export default userSlice.reducer;

// userSlice is a slice created using createSlice . 
// reducers (inside createSlice)
// It’s an object where:
// Each key = an action name (addUser, removeUser)
// Each value = a function (reducer) that defines how the state changes when that action is dispatched

// userSlice.reducer or userReducer
// This is a single reducer function automatically generated by Redux Toolkit.
// It combines all your individual reducer functions from the reducers object.
// The store only needs one reducer per slice, and that’s what userSlice.reducer provides.


 
// These are the parameters of the reducer function:  (state, action)

// state → current state of this slice.
// In your slice, initialState is null.
// So initially, state = null.

// action → object that Redux passes when you dispatch something.
// {
//  type: "user/addUser",  // automatically generated
//  payload: { id: 1, name: "Aditya" }  // data we send
// }
